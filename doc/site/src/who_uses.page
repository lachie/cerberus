---
title: Who uses
inMenu: true
orderInfo: 3
---
h2. Who uses

h4. "Anatol Pomozov":http://blog.pomozov.info/tags/english/

After using "Ruby On Rails":http://rubyonrails.com framework for a while in my day-job I became test-infected developer. 
RoR allows you to create tests for your application with exciting simplicity so it is hard not to be test-infected.

"I am working":http://pomozov.info as RubyOnRails freelance developer and consultant and for me very important to keep 
high quality of my projects.
That is why I needed a tool that run tests after each commit to VCS repository. I always must be sure that tests
are 100% passed cause I don't want to trap to "Broken Windows":http://en.wikipedia.org/wiki/Fixing_Broken_Windows situation.

For my Java projects I have been using "CruiseControl":http://cruisecontrol.sourceforge.net/ for a 
years and I would like to have similar tool for my
Rails projects. I did not find anything that matches my needs and I decide to write such tool for Ruby by myself.

First version of Cerberus was implemented during weekend. And following releases were made great steps forward
by adding new features and stability.

Now I am using Cerberus for my 8 Ruby projects and happy with it. I have scheduled task 'cerberus buildall' to 
run each 15 minutes and if tests for any of my project are broken Cerberus would notify me about that.


h4. "Abonja":http://www.abonja.nl

At Abonja we have been using unit-tests and continuous builds for our C++
projects. Next to our C++ work we are now using Ruby on Rails for the
website. We are very happy with the fact that we can work  the same way with
Ruby on Rails as Cerberus takes care of the continuous testing.

We have Cerberus running on a separate so-called build-box. It gets the
latest commit from SVN, migrates the database and runs all the tests. All
this in just a matter of minutes. If by any chance a test fails you get a
friendly mail from Cerberus telling you who broke the build, and better yet,
when the next run is successful, it tells you who fixed it!