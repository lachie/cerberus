---
title: FAQ
inMenu: true
orderInfo: 2
---
h2. FAQ

h3. Why Cerberus uses an external scheduler and not internal one like CruiseControl?

Cerberus was developed as a __stateless__ continuous building tool.

In this context it means that Cerberus won't consume RAM all the time.
For example, CruiseControl requires about 120 Megabites of RAM even if it has 
nothing to do. If you have a dedicated server just for running Continuous Integration 
tool, then probably you would not care about it. But if you like to use your 
development computer for building projects, then probably you would like to avoid
wasting your computer's resources like RAM and CPU cycles. In that kindof situation 
stateless nature of Cerberus is appropriate. Contrary to CruiseControl, Cerberus 
process will not be running most of the time. Every now and then Cerberus would be activated 
by an external scheduler (or subversion hook, or something else) to check if your sources 
the software repository have changed. Time to check this is usually small, so 
Cerberus process will not require any resources for too long.

It is a really smart and nifty technique.

h3. How to change task(s) for Rake

__Q: In my project we need to run Rails migrations before tests. But by default Cerberus runs the :default task.
How could I run eg. migations?__

It is easy - just set Rake task option in config:
<pre>
builder:
  rake:
    task: migrate test
</pre>

which would run first migrations and then tests. You could set __task__ option 
to any other combination of Rake tasks.

h3. How to schedule Cerberus build on nnCron

"nnCron":http://www.nncron.ru/download/nncron191.exe is scheduling tool for Windows. It is a good replacement for Unix Cron
on Windows platform. nnCron has simple user interface and it is easy to add new scheduled task.

There is only issue - nnCron do not pass __HOME__ environment variable to process so you need to add it to nncron.tab file. 
You could add __CERBERUS_HOME__ envronment variable or __HOME__ (in last case __CERBERUS_HOME__ would be calculated as 
HOME/.cerberus)

Mine nncron.tab file looks like below

<pre>
SET CERBERUS_HOME="C:\Documents and Settings\anatol\.cerberus"

#( cerberus
AsLoggedUser
LoadProfile
Time: */15 * * * * *
Action:
SWHide   NormalPriority
START-APPW: c:\progra~1\ruby\bin\cerberus.CMD buildall
)#
</pre>

h3. Run Cerberus from Subversion __post-commit__ hook

Subversion as well as others SCM allow you to "hook action on commit":http://svnbook.red-bean.com/en/1.1/ch05s02.html#svn-ch-5-sect-2.1.
And if you install Cerberus on the same box where you keep your Subversion repository you could add custom hook
that would run CI tool right after user commit. In this case you no need to use Cron.

Here you find a short guide how to make it. It is very simple in fact.

First you need to copy SUBVERSION_REPO/hooks/post-commit.tmpl to SUBVERSION_REPO/hooks/post-commit and make it executable
for *user that would manage this repository*. For example on Ubuntu Linux and subversion repository that served by Apache (through mod_svn)
hooks are run with user __www-data__ so change ownership of post-commit to www-data

<pre>
sudo chown www-data:www-data SUBVERSION_REPO/hooks/post-commit
</pre>

Remember that cerberus would be run *under this user*. So be careful with permissions of CERBERUS_HOME folder.

Then add following content to SUBVERSION_REPO/hooks/post-commit file

<pre>
#!/bin/sh
/usr/bin/env cerberus build YOUR_APPLICATION_NAME &
</pre>

To test correctness of the hook please run

<pre>
sudo -u YOUR_USER post-commit
</pre>

If you have any problems with permissions (for example CERBERUS_HOME not writable for user) command above would say it to you.

If this command finished successfully you should have file in CERBERUS_HOME/work/YOUR_APPLICATION_NAME/logs


h3. I would like to disable (but not to remove) project in Cerberus

Sometime we need to disable temporary application and do not allow __cerberus buildall__ command run it.

To achieve it just rename configuration file for YOUR_APPLICATION from
__config/YOUR_APPLICATION.yml__ to __config/YOUR_APPLICATION.yml.disabled__

Cerberus picks up only configurations that end with .yml

h3. Cerberus hangs on updating password-protected repository

When subversion tries to update password-protected repository it prompts user to enter user credentials. Cerberus could not interact with subversion client in interactive way. So subversion would wait password from Cerberus for infinity.

To solve it you need to specify username and password pair like in example below.
<pre>
scm:
  type: svn
  url: svn+ssh://rubyforge.org/var/svn/cerberus
  user_name: someuser
  password: somepassword
</pre>

h3. I have added Cerberus job to Cron but it does not work for me. It is even do not start building.

Seems that you configured Cron incorrectly.

Lets imagine that you trying to run Cerberus each 10 minutes. You need to start editing your crontab file.
Type <pre>crontab -e</pre>
And then add your job here <pre>*/10 * * * * cerberus buildall</pre>
This task would start checking all projects each 10 minutes. Take into account that tests would be run only if source changes were detected.


You also need to say cron where to find executables like 'cerberus', 'svn', 'darcs', 'rake' and others. For it you need to add PATH environment variable on the top of crontab file.
<pre>PATH=/opt/local/bin/</pre> Of course path depends on your system.

It works for me. But if you have some strange errors following trick could help you. Add <pre>MAILTO=your.mail.go@s.here</pre> on the top of crontab file and all Cron output would be directed to your mailbox.

For more info please read Cron mainual <pre>man crontab</pre>

h3. How to change location of Cerberus directory

By default cerberus creates its own files in user's home directoy. But you could change it by setting environment variable 
__CERBERUS_HOME__

<pre>
export CERBERUS_HOME=/var/cerberus
</pre>

h3. How to add darcs project to Cerberus

If you want to add darcs (or other custom SCM) project to cerberus you should explicitly say it to cerberus.
<pre>cerberus add PROJECT_DIR SCM=darcs</pre>

Currently supported scm are: svn, darcs, perforce.
