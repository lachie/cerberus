---
title: FAQ
inMenu: true
orderInfo: 2
---
h2. FAQ

h3. Why Cerberus uses external scheduler and not internal like CruiseControl do.

Cerberus was developed as __stateless__ continuous building tool.

Stateless in this sentence means that application does not sit in the RAM all the time.
For example CruiseControl requires 120 Megabites of RAM even if it anything does not do.
If you have dedicated server just for running Continuous Integration tool then probably you would not care about it. 
But if you like to use your development computer for building projects then probably you would like to avoid wasting of RAM and CPU cycles of your computer.

In this situation stateless  nature of Cerberus would help you.
Contrary to CruiseControl Cerberus process would not be run most of the time. Time to time Cerberus would be activated by external scheduler (or subversion hook or anything else) 
to check if sources in repository are changed. Time of checking usually small so Cerberus process would not take memory too long.

It is really smart and thrifty technique.

h3. How to change task for Rake

__Q: In my project we need to run Rails migrations before tests. But by default Cerberus runs :default task.
How could I run migations?__

It is easy to do - just set Rake tasks option in config
<pre>
builder:
  rake:
    task: migrate test
</pre>

And it would run migrations and then tests. You could set __task__ option to any other task set.


h3. How to schedule Cerberus build on nnCron

"nnCron":http://www.nncron.ru/download/nncron191.exe is scheduling tool for Windows. It is a good replacement for Unix Cron
on Windows platform. nnCron has simple user interface and it is easy to add new scheduled task.

There is only issue - nnCron do not pass __HOME__ environment variable to process so you need to add it to nncron.tab file. 
You could add __CERBERUS_HOME__ envronment variable or __HOME__ (in last case __CERBERUS_HOME__ would be calculated as 
HOME/.cerberus)

Mine nncron.tab file looks like below

<pre>
SET CERBERUS_HOME="C:\Documents and Settings\anatol\.cerberus"

#( cerberus
AsLoggedUser
LoadProfile
Time: */15 * * * * *
Action:
SWHide   NormalPriority
START-APPW: c:\progra~1\ruby\bin\cerberus.CMD buildall
)#
</pre>

h3. Run Cerberus from Subversion __post-commit__ hook

Subversion and like some other SCM allow to "hook action on commit":http://svnbook.red-bean.com/en/1.1/ch05s02.html#svn-ch-5-sect-2.1.
And if you install Cerberus on the same box where you keep your Subversion repository you could add custom hook
to run CI tool right after user commit and do not use Cron scheduler at all.

To make it add /hooks/post-commit file with following content

<pre>
#!/bin/sh
/usr/local/bin/cerberus build YOUR_APPLICATION_NAME
</pre>

And do not forget to add execution permission to this file.


h3. I would like to disable (but not to remove) project in Cerberus

Sometime we need to disable temporary application and do not allow __cerberus buildall__ command run it.

To achieve it just rename configuration file for YOUR_APPLICATION from
__config/YOUR_APPLICATION.yml__ to __config/YOUR_APPLICATION.yml.disabled__

Cerberus picks up only configurations that end with .yml

h3. Cerberus hangs on updating password-protected repository

When subversion tries to update password-protected repository it prompts user to enter user credentials. Cerberus could not interact with subversion client in interactive way. So subversion would wait password from Cerberus for infinity.

To solve it you need to specify username and password pair like in example below.
<pre>
scm:
  type: svn
  url: svn+ssh://rubyforge.org/var/svn/cerberus
  user_name: someuser
  password: somepassword
</pre>

h3. I have added Cerberus job to Cron but it does not work for me. It is even do not start building.

Seems that you configured Cron incorrectly.

Lets imagine that you trying to run Cerberus each 10 minutes. You need to start editing your crontab file.
Type <pre>crontab -e</pre>
And then add your job here <pre>*/10 * * * * cerberus buildall</pre>
This task would start checking all projects each 10 minutes. Take into account that tests would be run only if source changes were detected.


You also need to say cron where to find executables like 'cerberus', 'svn', 'darcs', 'rake' and others. For it you need to add PATH environment variable on the top of crontab file.
<pre>PATH=/opt/local/bin/</pre> Of course path depends on your system.

It works for me. But if you have some strange errors following trick could help you. Add <pre>MAILTO=your.mail.go@s.here</pre> on the top of crontab file and all Cron output would be directed to your mailbox.

For more info please read Cron mainual <pre>man crontab</pre>